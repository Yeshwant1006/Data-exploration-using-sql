create database faasos;

describe customers;
describe customerorders;
describe drivers;
describe driverorders;
describe ingredients;
describe rollrecipes;
describe rolls;
describe pricing;
describe ratings;
        
select * from customerorders;
select * from customers;
select * from driverorders;
select * from ingredients;
select * from drivers;
select * from rolls;
select * from rollrecipes;
select * from pricing;
select * from ratings;

/* A. Sales, Revenue, and Product Optimization */
/* 1. What are the top 5 best-selling rolls based on the total order amount? */
select r.roll_name, sum(co.total_amount) as total_sales
from customerorders co
join rollrecipes rr on co.order_id = rr.roll_id
join rolls r on rr.roll_id = r.roll_id
group by r.roll_name
order by total_sales desc
limit 5;

/* 2. What is the total revenue generated from all rolls in the last month? */
select sum(co.total_amount) as total_revenue
from customerorders co
where co.order_date >= date_sub(curdate(), interval 1 month);

/* 3. What is the average price of all rolls sold? */
select avg(r.roll_price) as average_roll_price
from rolls r;

/* 4. What is the total revenue generated by each roll size (Small, Medium, Large)? */
select r.roll_size, sum(co.total_amount) as total_revenue
from customerorders co
join rollrecipes rr on co.order_id = rr.roll_id
join rolls r on rr.roll_id = r.roll_id
group by r.roll_size
order by total_revenue desc;

/* 5. Which ingredients contribute the most to the revenue? */
select i.ingredient_name, sum(pr.price * rr.quantity) as total_revenue
from pricing pr
join rollrecipes rr on pr.ingredient_id = rr.ingredient_id
join ingredients i on pr.ingredient_id = i.ingredient_id
group by i.ingredient_name
order by total_revenue desc;

/* 6. What is the total revenue generated by each payment method? */
select co.payment_method, sum(co.total_amount) as total_revenue
from customerorders co
group by co.payment_method;

/* 7. Which roll is the most profitable in terms of margin (price vs ingredient cost)? */
select r.roll_name, 
       (max(r.roll_price) - sum(pr.price * rr.quantity)) as profit_margin
from rolls r
join rollrecipes rr on r.roll_id = rr.roll_id
join pricing pr on rr.ingredient_id = pr.ingredient_id
group by r.roll_name
order by profit_margin desc
limit 1;

 /* 8. What is the total revenue for each customer? */
select c.first_name, c.last_name, sum(co.total_amount) AS total_spent
from customerorders co
join customers c on co.customer_id = c.customer_id
group by c.customer_id
order by total_spent desc;

/* 9. What is the average revenue per order? */
select avg(total_amount) as average_order_value
from customerorders;

/* 10. Which rolls are purchased most frequently by customers who spend above a certain threshold? */
select r.roll_name, count(co.order_id) as purchase_count
from customerorders co
join rollrecipes rr on co.order_id = rr.roll_id
join rolls r on rr.roll_id = r.roll_id
join customers c on co.customer_id = c.customer_id
where co.total_amount > 50
group by r.roll_name
order by purchase_count desc;

/* B. Customer Experience, Satisfaction, and Retention */
/* 1. What is the average rating for each product (roll) based on customer feedback? */
select r.roll_name, avg(rt.rating) as avg_rating
from ratings rt
join customerorders co on rt.order_id = co.order_id
join rolls r on co.order_id = r.roll_id
group by r.roll_name
order by avg_rating desc;

/* 2. Which customers gave the highest ratings (5-star ratings) to any product? */
select distinct c.first_name, c.last_name, c.email, rt.rating
from ratings rt
join customerorders co on rt.order_id = co.order_id
join customers c on co.customer_id = c.customer_id
where rt.rating = 5
order by rt.rating desc;

/* 3. How many customers have given a rating of 4 or higher? */
select count(distinct customer_id) as high_rated_customers
from ratings
where rating >= 4;

/* 4. Which product (roll) has the most reviews (ratings) from customers? */
select r.roll_name, count(rt.rating_id) as review_count
from ratings rt
join customerorders co on rt.order_id = co.order_id
join rolls r on co.order_id = r.roll_id
group by r.roll_name
order by review_count desc
limit 1;

/* 5. What percentage of customers left reviews for their orders? */
select
    (count(distinct rt.customer_id) * 100.0 / count(distinct co.customer_id)) as review_percentage
from customerorders co
left join ratings rt on co.order_id = rt.order_id;

/* 6. Which customers left the most detailed feedback (longest reviews)? */
select c.first_name, c.last_name, rt.review, length(rt.review) as review_length
from ratings rt
join customerorders co on rt.order_id = co.order_id
join customers c on co.customer_id = c.customer_id
order by review_length desc
LIMIT 5;

/* 7. What is the distribution of customer ratings (e.g., how many 1-star, 2-star, etc.)? */
select rating, count(rating_id) as rating_count
from ratings
group by rating
order by rating desc;

/* 8. How many customers have been inactive but gave a rating before becoming inactive? */
select count(distinct c.customer_id) as inactive_customer_ratings
from ratings rt
join customerorders co on rt.order_id = co.order_id
join customers c on co.customer_id = c.customer_id
where c.status = 'inactive' and rt.rating is not null;

/* 9. How does customer feedback vary by order status (e.g., completed vs. cancelled)? */
select co.status, avg(length(rt.review)) as avg_review_length
from ratings rt
join customerorders co on rt.order_id = co.order_id
group by co.status
order by avg_review_length desc;

/* 10. Which customer provides the most positive feedback (highest ratings) along with their average order value? */
select c.first_name, c.last_name, avg(co.total_amount) as avg_order_value, avg(rt.rating) as avg_rating
from customers c
join customerorders co ON c.customer_id = co.customer_id
join ratings rt ON co.order_id = rt.order_id
group by c.customer_id
having avg(rt.rating) >= 4 
order by avg_rating desc
limit 5;

/* C. Operational Efficiency and Delivery Performance */
/* 1. Which drivers have the highest percentage of successful deliveries (Delivered vs Total deliveries)? */
select driver_id, 
       (count(case when delivery_status = 'Delivered' then 1 end) * 100.0 / count(*)) as success_percentage
from driverorders
group by driver_id
order by success_percentage desc
limit 5;

/* 2. Which drivers have the highest number of successful deliveries? */
select driver_id, count(driver_order_id) as successful_deliveries
from driverorders 
where delivery_status = 'Delivered'
group by driver_id
order by successful_deliveries desc
limit 5;

/* 3. What is the delivery status distribution (Delivered, In Transit, Cancelled)? */
select delivery_status, count(*) as status_count
from driverorders
group by delivery_status;

/* 4. Which delivery addresses are most common for orders? */
select delivery_address, count(*) as address_count
from customerorders
group by delivery_address
order by address_count desc
limit 5;

/* 5. What is the total number of orders delivered on time (within 30 minutes of the expected delivery)? */
select count(*) as on_time_deliveries
from driverorders do
join customerorders co on do.order_id = co.order_id
where timestampdiff(minute, co.order_date, do.delivery_date) <= 30
  and do.delivery_status = 'Delivered';

/* 6. What is the total revenue from deliveries, grouped by driver? */
select driver_id, sum(co.total_amount) as total_revenue
from driverorders do
join customerorders co on do.order_id = co.order_id
where do.delivery_status = 'Delivered'
group by driver_id
order by total_revenue desc;

/* 7. How many deliveries have been canceled, and what percentage of the total orders does this represent? */
select count(*) as canceled_deliveries,
       (count(*) * 100.0 / (select count(*) from driverorders)) as canceled_percentage
from driverorders
where delivery_status = 'Cancelled';

/* 8. How many deliveries were completed by each vehicle type? */
select d.vehicle_type, count(*) as delivery_count
from driverorders do
join drivers d on do.driver_id = d.driver_id
where do.delivery_status = 'Delivered'
group by d.vehicle_type
order by delivery_count desc;

/* 9. What is the average number of deliveries per day? */
select date(do.delivery_date) as delivery_day, count(*) as deliveries_per_day
from driverorders do
where do.delivery_status = 'Delivered'
group by delivery_day
order by deliveries_per_day desc;

/* 10. Which drivers are handling the most deliveries with cancellations or issues? */
select d.driver_name, count(*) as problematic_deliveries
from driverorders do
join drivers d on do.driver_id = d.driver_id
join customerorders co on do.order_id = co.order_id
where do.delivery_status IN ('Cancelled', 'In Transit')
group by d.driver_name
order by problematic_deliveries desc;

/* D. Menu and Product Development */
/* 1. Which roll has the highest profit margin (i.e., difference between selling price and ingredient cost)? */
select r.roll_name, r.roll_price, sum(p.price * rr.quantity) as ingredient_cost,
	  (r.roll_price - sum(p.price * rr.quantity)) as profit_margin
from rollrecipes rr
join pricing p on rr.ingredient_id = p.ingredient_id
join rolls r on rr.roll_id = r.roll_id
group by r.roll_name, r.roll_price
order by profit_margin desc
limit 1;

/* 2. What are the most popular ingredients used across all rolls? */
select i.ingredient_name, sum(rr.quantity) as total_quantity
from rollrecipes rr
join ingredients i on rr.ingredient_id = i.ingredient_id
group by i.ingredient_name
order by total_quantity desc
limit 5;

/* 3. What is the average price of each roll? */
select roll_name, avg(roll_price) as avg_price
from rolls
group by roll_name;

/* 4. Which rolls have the highest average rating? */
select r.roll_name, avg(rt.rating) as avg_rating
from ratings rt
join customerorders co on rt.order_id = co.order_id
join rollrecipes rr on rr.roll_id = co.order_id
join rolls r on rr.roll_id = r.roll_id
group by r.roll_name
order by avg_rating desc
limit 5;

/* 5. What is the most expensive ingredient used in any roll? */
select i.ingredient_name, max(p.price) as max_price
from ingredients i
join pricing p on i.ingredient_id = p.ingredient_id
group by i.ingredient_name
order by max_price desc
limit 1;

/* 6.  How much does each roll cost in terms of ingredients? */
select r.roll_name, sum(p.price * rr.quantity) as ingredient_cost
from rollrecipes rr
join pricing p on rr.ingredient_id = p.ingredient_id
join rolls r on rr.roll_id = r.roll_id
group by r.roll_name
order by ingredient_cost desc;

/*7. What is the total revenue from rolls per month? */
select extract(month from co.order_date) as order_month, sum(co.total_amount) as total_revenue
from customerorders co
join rollrecipes rr on rr.roll_id = co.order_id
group by order_month
order by order_month;

/* 8. Which rolls have the highest ingredient cost compared to their selling price? */
select r.roll_name, sum(p.price * rr.quantity) as ingredient_cost, r.roll_price, 
       (sum(p.price * rr.quantity) / r.roll_price) as cost_percentage
from rollrecipes rr
join pricing p on rr.ingredient_id = p.ingredient_id
join rolls r on rr.roll_id = r.roll_id
group by r.roll_name, r.roll_price
order by cost_percentage desc
limit 5;

/* 9. How many rolls contain a specific ingredient, such as "Chicken"? */
select count(distinct rr.roll_id) as num_rolls_with_chicken
from rollrecipes rr
join ingredients i on rr.ingredient_id = i.ingredient_id
where i.ingredient_name = 'Chicken';

/* 10. What is the most ordered roll in terms of total orders? */
select r.roll_name, count(co.order_id) as total_orders
from customerorders co
join rollrecipes rr on rr.roll_id = co.order_id
join rolls r on rr.roll_id = r.roll_id
group by r.roll_name
order by total_orders desc
limit 1;

/* E. End-to-End Customer Journey and Business Performance*/  
/* 1. What is the total revenue generated from all completed orders, including the breakdown by roll type? */
select r.roll_name, sum(co.total_amount) as total_revenue
from customerorders co
join driverorders do on co.order_id = do.order_id
join rollrecipes rr on rr.roll_id = do.order_id
join rolls r on r.roll_id = rr.roll_id
where co.status = 'Completed'
group by r.roll_name;

/* 2. What is the average total amount spent by customers based on their membership status (active, inactive, suspended)? */
select c.status as customer_status, avg(co.total_amount) as avg_spent
from customers c
join customerorders co on c.customer_id = co.customer_id
group by c.status;

/* 3. Which roll type has the highest revenue, and how does it correlate with customer ratings? */
select r.roll_name, sum(co.total_amount) as total_revenue, avg(rt.rating) as avg_rating
from customerorders co
join driverorders d on co.order_id = d.order_id
join rollrecipes rr on co.order_id = rr.roll_id
join rolls r on rr.roll_id = r.roll_id
join ratings rt on co.order_id = rt.order_id
where co.status = 'Completed'
group by r.roll_name
order by total_revenue desc;

/* 4. How many customers have placed orders, and how does their order frequency correlate with their satisfaction rating? */
select c.customer_id, c.first_name, c.last_name, count(co.order_id) as order_count, avg(rt.rating) as avg_rating
from customers c
join customerorders co on c.customer_id = co.customer_id
join ratings rt on rt.order_id = co.order_id
where co.status = 'Completed'
group by c.customer_id
order by order_count desc;

/* 5. How many Veg Rolls and Non-Veg Rolls have been sold, and which customer bought which roll by name? */
select co.customer_id, c.first_name, r.roll_name,
    count(co.order_id) as roll_quantity,
    case 
        when r.roll_name like '%Veg%' then 'Veg Roll'
        else 'Non-Veg Roll'
    end as roll_type
from customerorders co
join driverorders do on co.order_id = do.order_id
join rollrecipes rr on co.order_id = rr.roll_id
join rolls r on rr.roll_id = r.roll_id
join customers c on co.customer_id = c.customer_id
where co.status = 'Completed'
group by co.customer_id, c.first_name, r.roll_name
order by roll_type, roll_quantity desc;

/* 6. Which ingredients are most commonly used in the rolls and how do they impact the overall revenue? */
select i.ingredient_name, sum(p.price * rr.quantity) as total_ingredient_cost, sum(co.total_amount) as total_revenue
from rollrecipes rr
join ingredients i on i.ingredient_id = rr.ingredient_id
join pricing p on p.ingredient_id = i.ingredient_id
join customerorders co on co.order_id = rr.roll_id
where co.status = 'Completed'
group by i.ingredient_name
order by total_revenue desc;

/* 7. What is the retention rate of customers based on the frequency of their orders and their satisfaction ratings? */
with customer_order_stats as ( 
				select co.customer_id, count(co.order_id) as order_count, avg(rt.rating) as avg_rating
				from customerorders co
				join ratings rt on rt.order_id = co.order_id
				where co.status = 'Completed'
				group by co.customer_id )
select customer_id,order_count, avg_rating,
    case
        when order_count > 1 then 'Repeat Customer'
        else 'First-Time Customer'
    end as customer_type
from customer_order_stats;

/* 8. How much revenue is generated by each customer based on their spending habits and rating? */
select c.customer_id, c.first_name, c.last_name, sum(co.total_amount) as total_spent, avg(rt.rating) as avg_rating
from customers c
join customerorders co on c.customer_id = co.customer_id
join ratings rt on rt.order_id = co.order_id
where co.status = 'Completed'
group by c.customer_id
order by total_spent desc;

/* 9. What is the impact of roll pricing on customer ratings and repeat purchases? */
select r.roll_name, avg(rt.rating) as avg_rating, count(distinct co.customer_id) as repeat_customers, avg(r.roll_price) as avg_roll_price
from customerorders co
join driverorders do on co.order_id = do.order_id
join rollrecipes rr on rr.roll_id = do.order_id
join rolls r on r.roll_id = rr.roll_id
join ratings rt on rt.order_id = co.order_id
where co.status = 'Completed'
group by r.roll_name
order by avg_roll_price desc;
 
/* 10. What is the total revenue, order volume for different roll sizes (Small, Medium, Large)? */
select r.roll_size, count(co.order_id) as total_orders, sum(co.total_amount) as total_revenue
from customerorders co
join driverorders do on co.order_id = do.order_id
join rolls r on r.roll_id = do.order_id
where co.status = 'Completed'
group by r.roll_size;


































































































 










